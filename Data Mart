/*Convert the week_date to a DATE format

Add a week_number as the second column for each week_date value, for example any value from the 1st of January to 7th of January will be 1, 8th to 14th will be 2 etc

Add a month_number with the calendar month for each week_date value as the 3rd column

Add a calendar_year column as the 4th column containing either 2018, 2019 or 2020 values

Add a new column called age_band after the original segment column using the following mapping on the number inside the segment value
Add a new demographic column using the following mapping for the first letter in the segment values:

Ensure all null string values with an "unknown" string value in the original segment column as well as the new age_band and demographic columns

Generate a new avg_transaction column as the sales value divided by transactions rounded to 2 decimal places for each record
*/



DROP TABLE IF EXISTS cleaned_weekly_sales;
CREATE TEMP TABLE cleaned_weekly_sales as
(
  SELECT 
  TO_DATE(week_date, 'DD-MM-YYYY') as week_date,
  DATE_PART('week', TO_DATE(week_date, 'DD-MM-YYYY')) as week_number,
  DATE_PART('month', TO_DATE(week_date, 'DD-MM-YYYY')) as month_number,
  DATE_PART('year', TO_DATE(week_date, 'DD-MM-YYYY')) as calendar_year,
  region, platform, segment,
  CASE 
  WHEN RIGHT(segment,1) = '1' THEN 'Young Adults'
  WHEN RIGHT(segment,1) = '2' THEN 'Middle Aged'
  WHEN RIGHT(segment,1) = '3' OR RIGHT(segment,1) = '4' THEN 'Retirees'
  Else 'Unknown age band' 
  END as age_band,
  CASE 
  WHEN LEFT(segment,1) = 'C' THEN 'Couples'
  WHEN LEFT(segment,1) = 'F' THEN 'Families'
  Else 'Unknown Group' 
  END as demographic,
  transactions,
  sales,
  ROUND((sales/transactions),2) as avg_transaction
  
  from data_mart.weekly_sales
);
